{"remainingRequest":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/babel-loader/lib/index.js!/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/src/components/house/HouseList.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/src/components/house/HouseList.vue","mtime":1637885291387},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KaW1wb3J0IEhvdXNlTGlzdFJvdyBmcm9tICJAL2NvbXBvbmVudHMvaG91c2UvSG91c2VMaXN0Um93LnZ1ZSI7CmltcG9ydCB7IG1hcFN0YXRlLCBtYXBHZXR0ZXJzIH0gZnJvbSAidnVleCI7CmNvbnN0IGhvdXNlU3RvcmUgPSAiaG91c2VTdG9yZSI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiSG91c2VMaXN0IiwKICBjb21wb25lbnRzOiB7CiAgICBIb3VzZUxpc3RSb3cKICB9LAoKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgbWFwOiBudWxsLAogICAgICBtYXJrZXJzOiBbXSwKICAgICAgZ2VvY29kZXI6IG51bGwsCiAgICAgIGluZm93aW5kb3c6IG51bGwKICAgIH07CiAgfSwKCiAgY29tcHV0ZWQ6IHsgLi4ubWFwR2V0dGVycyhob3VzZVN0b3JlLCBbImhvdXNlSW5mbyJdKSwKICAgIC4uLm1hcFN0YXRlKGhvdXNlU3RvcmUsIFsiaG91c2VzIl0pCiAgfSwKCiAgdXBkYXRlZCgpIHsKICAgIGNvbnNvbGUubG9nKCJtYWtlIHN0YXJ0Iik7IC8vIOyngOuPhOyXkCDtkZzsi5zrkJjqs6Ag7J6I64qUIOuniOy7pOulvCDsoJzqsbDtlanri4jri6QKCiAgICBpZiAodGhpcy5pbmZvd2luZG93ICE9PSBudWxsKSB0aGlzLmluZm93aW5kb3cuY2xvc2UoKTsKICAgIHRoaXMuZGlzcGxheU1hcmtlcih0aGlzLmhvdXNlSW5mbyk7CiAgICBjb25zb2xlLmxvZygibWFrZSBlbmQiKTsKICB9LAoKICBtb3VudGVkKCkgewogICAgaWYgKHdpbmRvdy5rYWthbyAmJiB3aW5kb3cua2FrYW8ubWFwcykgewogICAgICB0aGlzLmluaXRNYXAoKTsKICAgIH0gZWxzZSB7CiAgICAgIGNvbnN0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNjcmlwdCIpOwogICAgICAvKiBnbG9iYWwga2FrYW8gKi8KCiAgICAgIHNjcmlwdC5vbmxvYWQgPSAoKSA9PiBrYWthby5tYXBzLmxvYWQodGhpcy5pbml0TWFwKTsKCiAgICAgIHNjcmlwdC5zcmMgPSAiLy9kYXBpLmtha2FvLmNvbS92Mi9tYXBzL3Nkay5qcz9hdXRvbG9hZD1mYWxzZSZhcHBrZXk9Njk5MGVlZDY1ZWYxYjcwODE4N2JkNjJjZTRmMWFmZTYmbGlicmFyaWVzPXNlcnZpY2VzIjsKICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChzY3JpcHQpOwogICAgfQogIH0sCgogIG1ldGhvZHM6IHsKICAgIGluaXRNYXAoKSB7CiAgICAgIGNvbnN0IGNvbnRhaW5lciA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCJtYXAiKTsKICAgICAgY29uc3Qgb3B0aW9ucyA9IHsKICAgICAgICBjZW50ZXI6IG5ldyBrYWthby5tYXBzLkxhdExuZygzNy41NjA3MDc0NjYzNDUzLCAxMjcuMDAwMDYwNjY1MTg1KSwKICAgICAgICBsZXZlbDogNQogICAgICB9OwogICAgICB0aGlzLm1hcCA9IG5ldyBrYWthby5tYXBzLk1hcChjb250YWluZXIsIG9wdGlvbnMpOwogICAgICB0aGlzLmdlb2NvZGVyID0gbmV3IGtha2FvLm1hcHMuc2VydmljZXMuR2VvY29kZXIoKTsKICAgIH0sCgogICAgZGlzcGxheU1hcmtlcihwbGFjZXMpIHsKICAgICAgLy92YXIgZnJhZ21lbnQgPSBkb2N1bWVudC5jcmVhdGVEb2N1bWVudEZyYWdtZW50KCk7CiAgICAgIC8vIHZhciBib3VuZHMgPSBuZXcga2FrYW8ubWFwcy5MYXRMbmdCb3VuZHMoKTsKICAgICAgY29uc29sZS5sb2coInBsYWNlcyDquLjsnbQgOiAiICsgcGxhY2VzLmxlbmd0aCk7CgogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBsYWNlcy5sZW5ndGg7IGkrKykgewogICAgICAgIC8vIGNvbnNvbGUubG9nKCJwbGFjZXMgcG9zaXRpb25zIDogIiArIHBsYWNlUG9zaXRpb24pOwogICAgICAgIC8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8vLy8KICAgICAgICBsZXQgYWRkciA9IHBsYWNlc1tpXS5zaWRvTmFtZSArICIgIiArIHBsYWNlc1tpXS5yb2FkTmFtZSArICIgIiArIHBhcnNlSW50KHBsYWNlc1tpXS5idWlsZGluZ0NvZGUpOwoKICAgICAgICBsZXQgY2FsbGJhY2sgPSAocmVzdWx0LCBzdGF0dXMpID0+IHsKICAgICAgICAgIC8vIOygleyDgeyggeycvOuhnCDqsoDsg4nsnbQg7JmE66OM65CQ7Jy866m0CiAgICAgICAgICBsZXQgcGxhY2UgPSBwbGFjZXNbaV07CgogICAgICAgICAgaWYgKHN0YXR1cyA9PT0ga2FrYW8ubWFwcy5zZXJ2aWNlcy5TdGF0dXMuT0spIHsKICAgICAgICAgICAgbGV0IHBvc2l0aW9uID0gbmV3IGtha2FvLm1hcHMuTGF0TG5nKHJlc3VsdFswXS55LCByZXN1bHRbMF0ueCk7CiAgICAgICAgICAgIGNvbnNvbGUubG9nKHBsYWNlKTsgLy8gYm91bmRzLmV4dGVuZChwb3NpdGlvbik7CgogICAgICAgICAgICBsZXQgbWFya2VyID0gbmV3IGtha2FvLm1hcHMuTWFya2VyKHsKICAgICAgICAgICAgICBtYXA6IHRoaXMubWFwLAogICAgICAgICAgICAgIHBvc2l0aW9uOiBwb3NpdGlvbgogICAgICAgICAgICB9KTsKICAgICAgICAgICAgY29uc29sZS5sb2coaSk7CiAgICAgICAgICAgIHRoaXMuaW5mb3dpbmRvdyA9IG5ldyBrYWthby5tYXBzLkluZm9XaW5kb3coewogICAgICAgICAgICAgIGNvbnRlbnQ6IGA8ZGl2IHN0eWxlPSJ3aWR0aDoxNTBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPiR7cmVzdWx0WzBdLnJvYWRfYWRkcmVzcy5idWlsZGluZ19uYW1lfTwvZGl2PgogICAgICAgICAgICA8ZGl2IHN0eWxlPSJ3aWR0aDoxNTBweDt0ZXh0LWFsaWduOmNlbnRlcjsiPiR7cmVzdWx0WzBdLmFkZHJlc3NfbmFtZX08L2Rpdj5gCiAgICAgICAgICAgIH0pOwogICAgICAgICAgICB0aGlzLmluZm93aW5kb3cub3Blbih0aGlzLm1hcCwgbWFya2VyKTsKICAgICAgICAgIH0KICAgICAgICB9OyAvLyBjb25zb2xlLmxvZyhjYWxsYmFjayk7CiAgICAgICAgLy8gdmFyIHJlcyA9IHRoaXMuZ2VvY29kZXIuYWRkcmVzc1NlYXJjaChhZGRyLCBjYWxsYmFjayk7CiAgICAgICAgLy8gY29uc29sZS5sb2coIkBAQCIpOwoKCiAgICAgICAgdGhpcy5nZW9jb2Rlci5hZGRyZXNzU2VhcmNoKGFkZHIsIGNhbGxiYWNrKTsgLy8gY29uc29sZS5sb2coYm91bmRzKTsKICAgICAgICAvLyB0aGlzLm1hcC5zZXRCb3VuZHMoYm91bmRzKTsKICAgICAgfQogICAgfSwKCiAgICAvLyBBZGRNYXJrZXIocG9zaXRpb24sIGlkeCkgewogICAgLy8gICBjb25zb2xlLmxvZyhpZHgpOwogICAgLy8gICB2YXIgaW1hZ2VTcmMgPQogICAgLy8gICAgICAgImh0dHBzOi8vdDEuZGF1bWNkbi5uZXQvbG9jYWxpbWcvbG9jYWxpbWFnZXMvMDcvbWFwYXBpZG9jL21hcmtlcl9udW1iZXJfYmx1ZS5wbmciLCAvLyDrp4jsu6Qg7J2066+47KeAIHVybCwg7Iqk7ZSE65287J207Yq4IOydtOuvuOyngOulvCDslIHri4jri6QKICAgIC8vICAgICBpbWFnZVNpemUgPSBuZXcga2FrYW8ubWFwcy5TaXplKDM2LCAzNyksIC8vIOuniOy7pCDsnbTrr7jsp4DsnZgg7YGs6riwCiAgICAvLyAgICAgaW1nT3B0aW9ucyA9IHsKICAgIC8vICAgICAgIHNwcml0ZVNpemU6IG5ldyBrYWthby5tYXBzLlNpemUoMzYsIDY5MSksIC8vIOyKpO2UhOudvOydtO2KuCDsnbTrr7jsp4DsnZgg7YGs6riwCiAgICAvLyAgICAgICBzcHJpdGVPcmlnaW46IG5ldyBrYWthby5tYXBzLlBvaW50KDAsIDEgKiA0NiArIDEwKSwgLy8g7Iqk7ZSE65287J207Yq4IOydtOuvuOyngCDspJEg7IKs7Jqp7ZWgIOyYgeyXreydmCDsoozsg4Hri6gg7KKM7ZGcCiAgICAvLyAgICAgICBvZmZzZXQ6IG5ldyBrYWthby5tYXBzLlBvaW50KDEzLCAzNyksIC8vIOuniOy7pCDsooztkZzsl5Ag7J287LmY7Iuc7YKsIOydtOuvuOyngCDrgrTsl5DshJzsnZgg7KKM7ZGcCiAgICAvLyAgICAgfSwKICAgIC8vICAgICBtYXJrZXJJbWFnZSA9IG5ldyBrYWthby5tYXBzLk1hcmtlckltYWdlKAogICAgLy8gICAgICAgaW1hZ2VTcmMsCiAgICAvLyAgICAgICBpbWFnZVNpemUsCiAgICAvLyAgICAgICBpbWdPcHRpb25zCiAgICAvLyAgICAgKSwKICAgIC8vICAgICBtYXJrZXIgPSBuZXcga2FrYW8ubWFwcy5NYXJrZXIoewogICAgLy8gICAgICAgcG9zaXRpb246IHBvc2l0aW9uLCAvLyDrp4jsu6TsnZgg7JyE7LmYCiAgICAvLyAgICAgICBpbWFnZTogbWFya2VySW1hZ2UsCiAgICAvLyAgICAgfSk7CiAgICAvLyAgIG1hcmtlci5zZXRNYXAodGhpcy5tYXApOyAvLyDsp4Drj4Qg7JyE7JeQIOuniOy7pOulvCDtkZzstpztlanri4jri6QKICAgIC8vICAgLy8gdGhpcy5tYXJrZXJzLnB1c2gobWFya2VyKTsgLy8g67Cw7Je07JeQIOyDneyEseuQnCDrp4jsu6Trpbwg7LaU6rCA7ZWp64uI64ukCiAgICAvLyAgIC8vIGNvbnNvbGUubG9nKHRoaXMubWFya2Vycyk7CiAgICAvLyB9LAogICAgcmVtb3ZlTWFya2VyKCkgewogICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMubWFya2Vycy5sZW5ndGg7IGkrKykgewogICAgICAgIHRoaXMubWFya2Vyc1tpXS5zZXRNYXAobnVsbCk7CiAgICAgIH0KCiAgICAgIHRoaXMubWFya2VycyA9IFtdOwogICAgfQoKICB9Cn07"},{"version":3,"sources":["HouseList.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\r\n  <div>\r\n    <b-row>\r\n      <b-container id=\"map\" style=\"width: 100%; height: 500px\"></b-container>\r\n    </b-row>\r\n    <b-container v-if=\"houses\" class=\"bv-example-row mt-3\">\r\n      <house-list-row\r\n        v-for=\"(house, index) in houses\"\r\n        :key=\"index\"\r\n        :house=\"house\"\r\n      />\r\n    </b-container>\r\n    <b-container v-else class=\"bv-example-row mt-3\">\r\n      <b-row>\r\n        <b-col><b-alert show>아파트 목록이 없습니다.</b-alert></b-col>\r\n      </b-row>\r\n    </b-container>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport HouseListRow from \"@/components/house/HouseListRow.vue\";\r\nimport { mapState, mapGetters } from \"vuex\";\r\n\r\nconst houseStore = \"houseStore\";\r\nexport default {\r\n  name: \"HouseList\",\r\n  components: {\r\n    HouseListRow,\r\n  },\r\n  data() {\r\n    return {\r\n      map: null,\r\n      markers: [],\r\n      geocoder: null,\r\n      infowindow: null,\r\n    };\r\n  },\r\n  computed: {\r\n    ...mapGetters(houseStore, [\"houseInfo\"]),\r\n    ...mapState(houseStore, [\"houses\"]),\r\n  },\r\n  updated() {\r\n    console.log(\"make start\");\r\n    // 지도에 표시되고 있는 마커를 제거합니다\r\n    if (this.infowindow !== null) this.infowindow.close();\r\n    this.displayMarker(this.houseInfo);\r\n\r\n    console.log(\"make end\");\r\n  },\r\n  mounted() {\r\n    if (window.kakao && window.kakao.maps) {\r\n      this.initMap();\r\n    } else {\r\n      const script = document.createElement(\"script\");\r\n      /* global kakao */\r\n      script.onload = () => kakao.maps.load(this.initMap);\r\n      script.src =\r\n        \"//dapi.kakao.com/v2/maps/sdk.js?autoload=false&appkey=6990eed65ef1b708187bd62ce4f1afe6&libraries=services\";\r\n      document.head.appendChild(script);\r\n    }\r\n  },\r\n  methods: {\r\n    initMap() {\r\n      const container = document.getElementById(\"map\");\r\n      const options = {\r\n        center: new kakao.maps.LatLng(37.5607074663453, 127.000060665185),\r\n        level: 5,\r\n      };\r\n      this.map = new kakao.maps.Map(container, options);\r\n      this.geocoder = new kakao.maps.services.Geocoder();\r\n    },\r\n    displayMarker(places) {\r\n      //var fragment = document.createDocumentFragment();\r\n      // var bounds = new kakao.maps.LatLngBounds();\r\n      console.log(\"places 길이 : \" + places.length);\r\n      for (let i = 0; i < places.length; i++) {\r\n        // console.log(\"places positions : \" + placePosition);\r\n        ////////////////////////////////////////////////////////////////////////////////////////\r\n        let addr =\r\n          places[i].sidoName +\r\n          \" \" +\r\n          places[i].roadName +\r\n          \" \" +\r\n          parseInt(places[i].buildingCode);\r\n\r\n        let callback = (result, status) => {\r\n          // 정상적으로 검색이 완료됐으면\r\n          let place = places[i];\r\n          if (status === kakao.maps.services.Status.OK) {\r\n            let position = new kakao.maps.LatLng(result[0].y, result[0].x);\r\n            console.log(place);\r\n            // bounds.extend(position);\r\n            let marker = new kakao.maps.Marker({\r\n              map: this.map,\r\n              position: position,\r\n            });\r\n            console.log(i);\r\n            this.infowindow = new kakao.maps.InfoWindow({\r\n              content: `<div style=\"width:150px;text-align:center;\">${result[0].road_address.building_name}</div>\r\n            <div style=\"width:150px;text-align:center;\">${result[0].address_name}</div>`,\r\n            });\r\n            this.infowindow.open(this.map, marker);\r\n          }\r\n        };\r\n        // console.log(callback);\r\n        // var res = this.geocoder.addressSearch(addr, callback);\r\n        // console.log(\"@@@\");\r\n        this.geocoder.addressSearch(addr, callback);\r\n        // console.log(bounds);\r\n        // this.map.setBounds(bounds);\r\n      }\r\n    },\r\n    // AddMarker(position, idx) {\r\n    //   console.log(idx);\r\n    //   var imageSrc =\r\n    //       \"https://t1.daumcdn.net/localimg/localimages/07/mapapidoc/marker_number_blue.png\", // 마커 이미지 url, 스프라이트 이미지를 씁니다\r\n    //     imageSize = new kakao.maps.Size(36, 37), // 마커 이미지의 크기\r\n    //     imgOptions = {\r\n    //       spriteSize: new kakao.maps.Size(36, 691), // 스프라이트 이미지의 크기\r\n    //       spriteOrigin: new kakao.maps.Point(0, 1 * 46 + 10), // 스프라이트 이미지 중 사용할 영역의 좌상단 좌표\r\n    //       offset: new kakao.maps.Point(13, 37), // 마커 좌표에 일치시킬 이미지 내에서의 좌표\r\n    //     },\r\n    //     markerImage = new kakao.maps.MarkerImage(\r\n    //       imageSrc,\r\n    //       imageSize,\r\n    //       imgOptions\r\n    //     ),\r\n    //     marker = new kakao.maps.Marker({\r\n    //       position: position, // 마커의 위치\r\n    //       image: markerImage,\r\n    //     });\r\n\r\n    //   marker.setMap(this.map); // 지도 위에 마커를 표출합니다\r\n    //   // this.markers.push(marker); // 배열에 생성된 마커를 추가합니다\r\n    //   // console.log(this.markers);\r\n    // },\r\n    removeMarker() {\r\n      for (let i = 0; i < this.markers.length; i++) {\r\n        this.markers[i].setMap(null);\r\n      }\r\n      this.markers = [];\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n#map {\r\n  width: 400px;\r\n  height: 400px;\r\n}\r\n\r\n.button-group {\r\n  margin: 10px 0px;\r\n}\r\n\r\nbutton {\r\n  margin: 0 3px;\r\n}\r\n</style>\r\n"],"sourceRoot":"src/components/house"}]}