{"remainingRequest":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/babel-loader/lib/index.js!/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/eslint-loader/index.js??ref--14-0!/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/src/store/modules/noticeStore.js","dependencies":[{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/src/store/modules/noticeStore.js","mtime":1637885291395},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IHsgZ2V0Q29tbWVudCB9IGZyb20gJ0AvYXBpL2NvbW1lbnQuanMnOwpjb25zdCBub3RpY2VTdG9yZSA9IHsKICBuYW1lc3BhY2VkOiB0cnVlLAogIHN0YXRlOiB7CiAgICBjb21tZW50czogW10KICB9LAogIGdldHRlcnM6IHsKICAgIGNvbW1lbnRzKHN0YXRlKSB7CiAgICAgIHJldHVybiBzdGF0ZS5jb21tZW50czsKICAgIH0KCiAgfSwKICBtdXRhdGlvbnM6IHsKICAgIHNldENvbW1lbnRzKHN0YXRlLCBwYXlsb2FkKSB7CiAgICAgIC8vIHN0YXRl7J2YIGNvbW1lbnRz7JeQIOyEnOuyhOyXkOyEnCDslrvslrTsmKgg64+E7ISc7Y+JIOuqqeuhnSDshLjtjIUuCiAgICAgIHN0YXRlLmNvbW1lbnRzID0gcGF5bG9hZDsKICAgIH0KCiAgfSwKICBhY3Rpb25zOiB7CiAgICBnZXRDb21tZW50cyhjb250ZXh0LCBwYXlsb2FkKSB7CiAgICAgIGdldENvbW1lbnQocGF5bG9hZCwgKHsKICAgICAgICBkYXRhCiAgICAgIH0pID0+IHsKICAgICAgICBjb250ZXh0LmNvbW1pdCgic2V0Q29tbWVudHMiLCBkYXRhKTsKICAgICAgfSk7CiAgICB9CgogIH0KfTsKZXhwb3J0IGRlZmF1bHQgbm90aWNlU3RvcmU7"},{"version":3,"sources":["/Users/jeon-ungjae/Desktop/woong/Coding/Web_project/happyhouse/src/store/modules/noticeStore.js"],"names":["getComment","noticeStore","namespaced","state","comments","getters","mutations","setComments","payload","actions","getComments","context","data","commit"],"mappings":"AAAA,SAASA,UAAT,QAA2B,kBAA3B;AACA,MAAMC,WAAW,GAAG;AAClBC,EAAAA,UAAU,EAAE,IADM;AAElBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,QAAQ,EAAE;AAAZ,GAFW;AAGlBC,EAAAA,OAAO,EAAE;AACPD,IAAAA,QAAQ,CAACD,KAAD,EAAQ;AACd,aAAOA,KAAK,CAACC,QAAb;AACD;;AAHM,GAHS;AAQlBE,EAAAA,SAAS,EAAE;AACTC,IAAAA,WAAW,CAACJ,KAAD,EAAQK,OAAR,EAAiB;AAC1B;AACAL,MAAAA,KAAK,CAACC,QAAN,GAAiBI,OAAjB;AACD;;AAJQ,GARO;AAclBC,EAAAA,OAAO,EAAE;AACPC,IAAAA,WAAW,CAACC,OAAD,EAAUH,OAAV,EAAmB;AAC5BR,MAAAA,UAAU,CAACQ,OAAD,EAAU,CAAC;AAAEI,QAAAA;AAAF,OAAD,KAAc;AAChCD,QAAAA,OAAO,CAACE,MAAR,CAAe,aAAf,EAA8BD,IAA9B;AACD,OAFS,CAAV;AAGD;;AALM;AAdS,CAApB;AAuBA,eAAeX,WAAf","sourcesContent":["import { getComment } from '@/api/comment.js'\r\nconst noticeStore = {\r\n  namespaced: true,\r\n  state: { comments: [] },\r\n  getters: {\r\n    comments(state) {\r\n      return state.comments;\r\n    }\r\n  },\r\n  mutations: {\r\n    setComments(state, payload) {\r\n      // state의 comments에 서버에서 얻어온 도서평 목록 세팅.\r\n      state.comments = payload;\r\n    }\r\n  },\r\n  actions: {\r\n    getComments(context, payload) {\r\n      getComment(payload, ({ data }) => {\r\n        context.commit(\"setComments\", data);\r\n      });\r\n    }\r\n  },\r\n};\r\n\r\nexport default noticeStore;\r\n"]}]}